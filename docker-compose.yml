version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - datamasterylab


  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - datamasterylab
  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - datamasterylab

  spark-worker-1:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - datamasterylab

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - datamasterylab

  airflow-webserver:
    image: apache/airflow:2.9.1
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-scheduler
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=some_fernet_key
      - AIRFLOW__WEBSERVER__SECRET_KEY=some_secret_key
      - AIRFLOW__WEBSERVER__WORKERS=2
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
    volumes:
      - ./my_airflow/dags:/opt/airflow/dags
      - ./my_airflow/logs:/opt/airflow/logs
      - ./my_airflow/plugins:/opt/airflow/plugins
      - ./my_airflow/requirements.txt:/requirements.txt
      - ./my_airflow/mounted_exports:/opt/airflow/mounted_exports
    ports:
      - "8081:8080"
    env_file:
      - .env
    networks:
      - datamasterylab
    command: bash -c "pip install -r /requirements.txt && airflow webserver"

  airflow-scheduler:
    image: apache/airflow:2.9.1
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
    volumes:
      - ./my_airflow/dags:/opt/airflow/dags
      - ./my_airflow/logs:/opt/airflow/logs
      - ./my_airflow/plugins:/opt/airflow/plugins
      - ./my_airflow/mounted_exports:/opt/airflow/mounted_exports
    networks:
      - datamasterylab
    env_file:
      - .env
    command: bash -c "airflow db migrate && airflow scheduler"

  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - datamasterylab

volumes:
  postgres_data:

networks:
  datamasterylab:
